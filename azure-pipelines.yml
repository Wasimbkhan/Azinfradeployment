# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo My Azure infra deployment pipeline
  displayName: 'Run a one-line script'

- task: DownloadSecureFile@1
  name: publickey
  inputs:
    secureFile: 'azadm_rsa.pub'

- task: TerraformCLI@2
  name: version
  inputs:
    command: 'version'
    allowTelemetryCollection: true

- task: TerraformCLI@2
  name: Init
  inputs:
    command: 'init'
    #commandOptions: '-var appid=$(appid) -var password=$(password) -var sshkey=(publickey.secureFilePath)'
    backendType: 'azurerm'
    backendServiceArm: 'Pay-As-You-Go(51f12368-372d-48c6-8e3c-02c940c4a791)'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'rgtfstatebackend'
    backendAzureRmResourceGroupLocation: 'East US'
    backendAzureRmStorageAccountName: 'mybackendsg1'
    backendAzureRmContainerName: 'mybackendsgcontainer1'
    backendAzureRmKey: 'backend_terraform.tfstate'
    allowTelemetryCollection: true

- task: TerraformCLI@2
  name: Plan
  inputs:
    command: 'plan'
    environmentServiceName: 'Pay-As-You-Go(51f12368-372d-48c6-8e3c-02c940c4a791)'
    commandOptions: '-var appid=$(appid) -var password=$(password) -var sshkey=(publickey.secureFilePath)'
    allowTelemetryCollection: true

- task: TerraformCLI@2
  name: apply
  inputs:
    command: 'apply'
    commandOptions: '-var appid=$(appid) -var password=$(password) -var sshkey=(publickey.secureFilePath)'


- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

